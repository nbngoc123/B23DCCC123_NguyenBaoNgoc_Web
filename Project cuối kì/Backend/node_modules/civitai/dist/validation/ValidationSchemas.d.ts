import { z } from "zod";
export declare const fromTextSchema: z.ZodObject<{
    baseModel: z.ZodOptional<z.ZodString>;
    model: z.ZodString;
    params: z.ZodObject<{
        prompt: z.ZodString;
        negativePrompt: z.ZodOptional<z.ZodString>;
        scheduler: z.ZodOptional<z.ZodString>;
        steps: z.ZodOptional<z.ZodNumber>;
        cfgScale: z.ZodOptional<z.ZodNumber>;
        width: z.ZodNumber;
        height: z.ZodNumber;
        seed: z.ZodOptional<z.ZodNumber>;
        clipSkip: z.ZodOptional<z.ZodNumber>;
    }, "strict", z.ZodTypeAny, {
        prompt: string;
        width: number;
        height: number;
        negativePrompt?: string | undefined;
        scheduler?: string | undefined;
        steps?: number | undefined;
        cfgScale?: number | undefined;
        seed?: number | undefined;
        clipSkip?: number | undefined;
    }, {
        prompt: string;
        width: number;
        height: number;
        negativePrompt?: string | undefined;
        scheduler?: string | undefined;
        steps?: number | undefined;
        cfgScale?: number | undefined;
        seed?: number | undefined;
        clipSkip?: number | undefined;
    }>;
    additionalNetworks: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        strength: z.ZodOptional<z.ZodNumber>;
        triggerWord: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        strength?: number | undefined;
        triggerWord?: string | undefined;
    }, {
        strength?: number | undefined;
        triggerWord?: string | undefined;
    }>>>;
    controlNets: z.ZodOptional<z.ZodArray<z.ZodObject<{
        preprocessor: z.ZodOptional<z.ZodEnum<["Canny", "DepthZoe", "SoftedgePidinet", "Rembg"]>>;
        weight: z.ZodOptional<z.ZodNumber>;
        startStep: z.ZodOptional<z.ZodNumber>;
        endStep: z.ZodOptional<z.ZodNumber>;
        blobKey: z.ZodOptional<z.ZodNullable<z.ZodString>>;
        imageUrl: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    }, "strict", z.ZodTypeAny, {
        preprocessor?: "Canny" | "DepthZoe" | "SoftedgePidinet" | "Rembg" | undefined;
        weight?: number | undefined;
        startStep?: number | undefined;
        endStep?: number | undefined;
        blobKey?: string | null | undefined;
        imageUrl?: string | null | undefined;
    }, {
        preprocessor?: "Canny" | "DepthZoe" | "SoftedgePidinet" | "Rembg" | undefined;
        weight?: number | undefined;
        startStep?: number | undefined;
        endStep?: number | undefined;
        blobKey?: string | null | undefined;
        imageUrl?: string | null | undefined;
    }>, "many">>;
    callbackUrl: z.ZodOptional<z.ZodString>;
    quantity: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    batchSize: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    priority: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
    properties: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strict", z.ZodTypeAny, {
    model: string;
    params: {
        prompt: string;
        width: number;
        height: number;
        negativePrompt?: string | undefined;
        scheduler?: string | undefined;
        steps?: number | undefined;
        cfgScale?: number | undefined;
        seed?: number | undefined;
        clipSkip?: number | undefined;
    };
    quantity: number;
    batchSize: number;
    baseModel?: string | undefined;
    additionalNetworks?: Record<string, {
        strength?: number | undefined;
        triggerWord?: string | undefined;
    }> | undefined;
    controlNets?: {
        preprocessor?: "Canny" | "DepthZoe" | "SoftedgePidinet" | "Rembg" | undefined;
        weight?: number | undefined;
        startStep?: number | undefined;
        endStep?: number | undefined;
        blobKey?: string | null | undefined;
        imageUrl?: string | null | undefined;
    }[] | undefined;
    callbackUrl?: string | undefined;
    priority?: string | number | undefined;
    properties?: Record<string, any> | undefined;
}, {
    model: string;
    params: {
        prompt: string;
        width: number;
        height: number;
        negativePrompt?: string | undefined;
        scheduler?: string | undefined;
        steps?: number | undefined;
        cfgScale?: number | undefined;
        seed?: number | undefined;
        clipSkip?: number | undefined;
    };
    baseModel?: string | undefined;
    additionalNetworks?: Record<string, {
        strength?: number | undefined;
        triggerWord?: string | undefined;
    }> | undefined;
    controlNets?: {
        preprocessor?: "Canny" | "DepthZoe" | "SoftedgePidinet" | "Rembg" | undefined;
        weight?: number | undefined;
        startStep?: number | undefined;
        endStep?: number | undefined;
        blobKey?: string | null | undefined;
        imageUrl?: string | null | undefined;
    }[] | undefined;
    callbackUrl?: string | undefined;
    quantity?: number | undefined;
    batchSize?: number | undefined;
    priority?: string | number | undefined;
    properties?: Record<string, any> | undefined;
}>;
