{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Agent\\\\Chat\\\\Chat.js\";\n// Message.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  messages\n}) => {\n  // Receive messages from props\n\n  return (\n    /*#__PURE__*/\n    //     <div id=\"message-container\">\n    //   {messages.map((message, index) => (\n    //     <div key={index} className={`message ${message.role}`}>\n    //       {message.content.split('\\n').map((line, i) => (\n    //         <p key={i} className='message-content'>{line}</p>\n    //       ))}\n    //     </div>\n    //   ))}\n    // </div>\n    _jsxDEV(\"div\", {\n      id: \"message-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: message.content.split('\\n').map((line, i) => {\n          // Kiểm tra nếu line là header bằng cách dùng ký tự #\n          if (line.startsWith('# ')) {\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"message-header\",\n              children: line.slice(2)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 18\n            }, this);\n          } else if (line.startsWith('## ')) {\n            return /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"message-header\",\n              children: line.slice(3)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 18\n            }, this);\n          } else if (line.startsWith('### ')) {\n            return /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"message-header\",\n              children: line.slice(4)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 18\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-content\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 18\n            }, this);\n          }\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }, this)\n  );\n};\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Chat","messages","id","children","map","message","index","className","role","content","split","line","i","startsWith","slice","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Agent/Chat/Chat.js"],"sourcesContent":["// Message.js\r\nimport React from 'react';\r\n\r\n\r\nconst Chat = ({ messages }) => { // Receive messages from props\r\n\r\n  return (\r\n//     <div id=\"message-container\">\r\n//   {messages.map((message, index) => (\r\n//     <div key={index} className={`message ${message.role}`}>\r\n//       {message.content.split('\\n').map((line, i) => (\r\n//         <p key={i} className='message-content'>{line}</p>\r\n//       ))}\r\n//     </div>\r\n//   ))}\r\n// </div>\r\n<div id=\"message-container\">\r\n  {messages.map((message, index) => (\r\n    <div key={index} className={`message ${message.role}`}>\r\n      {message.content.split('\\n').map((line, i) => {\r\n        // Kiểm tra nếu line là header bằng cách dùng ký tự #\r\n        if (line.startsWith('# ')) {\r\n          return <h1 key={i} className='message-header'>{line.slice(2)}</h1>;\r\n        } else if (line.startsWith('## ')) {\r\n          return <h2 key={i} className='message-header'>{line.slice(3)}</h2>;\r\n        } else if (line.startsWith('### ')) {\r\n          return <h3 key={i} className='message-header'>{line.slice(4)}</h3>;\r\n        } else {\r\n          return <p key={i} className='message-content'>{line}</p>;\r\n        }\r\n      })}\r\n    </div>\r\n  ))}\r\n</div>\r\n  );\r\n};\r\n\r\n\r\nexport default Chat;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAE;;EAE/B;IAAA;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAF,OAAA;MAAKG,EAAE,EAAC,mBAAmB;MAAAC,QAAA,EACxBF,QAAQ,CAACG,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BP,OAAA;QAAiBQ,SAAS,EAAE,WAAWF,OAAO,CAACG,IAAI,EAAG;QAAAL,QAAA,EACnDE,OAAO,CAACI,OAAO,CAACC,KAAK,CAAC,IAAI,CAAC,CAACN,GAAG,CAAC,CAACO,IAAI,EAAEC,CAAC,KAAK;UAC5C;UACA,IAAID,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,EAAE;YACzB,oBAAOd,OAAA;cAAYQ,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,EAAEQ,IAAI,CAACG,KAAK,CAAC,CAAC;YAAC,GAA5CF,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC;UACpE,CAAC,MAAM,IAAIP,IAAI,CAACE,UAAU,CAAC,KAAK,CAAC,EAAE;YACjC,oBAAOd,OAAA;cAAYQ,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,EAAEQ,IAAI,CAACG,KAAK,CAAC,CAAC;YAAC,GAA5CF,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC;UACpE,CAAC,MAAM,IAAIP,IAAI,CAACE,UAAU,CAAC,MAAM,CAAC,EAAE;YAClC,oBAAOd,OAAA;cAAYQ,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,EAAEQ,IAAI,CAACG,KAAK,CAAC,CAAC;YAAC,GAA5CF,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC;UACpE,CAAC,MAAM;YACL,oBAAOnB,OAAA;cAAWQ,SAAS,EAAC,iBAAiB;cAAAJ,QAAA,EAAEQ;YAAI,GAApCC,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuC,CAAC;UAC1D;QACF,CAAC;MAAC,GAZMZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAEN,CAAC;AAACC,EAAA,GA/BInB,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}