{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Note\\\\Graph\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent1 = () => {\n  _s();\n  const [chartData, setChartData] = useState([{\n    label: 'Tháng 1',\n    value: 10\n  }, {\n    label: 'Tháng 2',\n    value: 20\n  }, {\n    label: 'Tháng 3',\n    value: 15\n  }]);\n  const [chartOptions, setChartOptions] = useState({\n    type: 'bar',\n    datasetLabel: 'Doanh thu',\n    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n    borderColor: 'rgba(255, 99, 132, 1)'\n  });\n  const chartRef = useRef();\n  useEffect(() => {\n    if (chartRef.current) {\n      // If a chart already exists, destroy it before creating a new one\n      const oldChart = chartRef.current.getContext('2d').chart;\n      if (oldChart) {\n        oldChart.destroy();\n      }\n    }\n    const chartInstance = new Chart(chartRef.current, {\n      type: chartOptions.type,\n      data: {\n        labels: chartData.map(item => item.label),\n        datasets: [{\n          label: chartOptions.datasetLabel,\n          data: chartData.map(item => item.value),\n          backgroundColor: chartOptions.backgroundColor,\n          borderColor: chartOptions.borderColor,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n\n    // Update the chart instance on the ref for cleanup\n    chartRef.current.chart = chartInstance;\n    return () => {\n      // Destroy the chart instance when the component unmounts\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n    };\n  }, [chartData, chartOptions]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(ChartComponent1, \"5O2eFy+QkXVmt0BlFP84TRSuUog=\");\n_c = ChartComponent1;\nexport default ChartComponent1;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent1\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ChartComponent1","_s","chartData","setChartData","label","value","chartOptions","setChartOptions","type","datasetLabel","backgroundColor","borderColor","chartRef","current","oldChart","getContext","chart","destroy","chartInstance","data","labels","map","item","datasets","borderWidth","options","scales","y","beginAtZero","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Note/Graph/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst ChartComponent1 = () => {\r\n  const [chartData, setChartData] = useState([\r\n    { label: 'Tháng 1', value: 10 },\r\n    { label: 'Tháng 2', value: 20 },\r\n    { label: 'Tháng 3', value: 15 },\r\n  ]);\r\n\r\n  const [chartOptions, setChartOptions] = useState({\r\n    type: 'bar',\r\n    datasetLabel: 'Doanh thu',\r\n    backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n    borderColor: 'rgba(255, 99, 132, 1)',\r\n  });\r\n\r\n  const chartRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // If a chart already exists, destroy it before creating a new one\r\n      const oldChart = chartRef.current.getContext('2d').chart;\r\n      if (oldChart) {\r\n        oldChart.destroy();\r\n      }\r\n    }\r\n\r\n    const chartInstance = new Chart(chartRef.current, {\r\n      type: chartOptions.type,\r\n      data: {\r\n        labels: chartData.map((item) => item.label),\r\n        datasets: [\r\n          {\r\n            label: chartOptions.datasetLabel,\r\n            data: chartData.map((item) => item.value),\r\n            backgroundColor: chartOptions.backgroundColor,\r\n            borderColor: chartOptions.borderColor,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Update the chart instance on the ref for cleanup\r\n    chartRef.current.chart = chartInstance;\r\n\r\n    return () => {\r\n      // Destroy the chart instance when the component unmounts\r\n      if (chartInstance) {\r\n      chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [chartData, chartOptions]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default ChartComponent1;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CACzC;IAAEQ,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAG,CAAC,CAChC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC;IAC/CY,IAAI,EAAE,KAAK;IACXC,YAAY,EAAE,WAAW;IACzBC,eAAe,EAAE,yBAAyB;IAC1CC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGjB,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACd,IAAIkB,QAAQ,CAACC,OAAO,EAAE;MACpB;MACA,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC,CAACC,KAAK;MACxD,IAAIF,QAAQ,EAAE;QACZA,QAAQ,CAACG,OAAO,CAAC,CAAC;MACpB;IACF;IAEA,MAAMC,aAAa,GAAG,IAAIrB,KAAK,CAACe,QAAQ,CAACC,OAAO,EAAE;MAChDL,IAAI,EAAEF,YAAY,CAACE,IAAI;MACvBW,IAAI,EAAE;QACJC,MAAM,EAAElB,SAAS,CAACmB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAClB,KAAK,CAAC;QAC3CmB,QAAQ,EAAE,CACR;UACEnB,KAAK,EAAEE,YAAY,CAACG,YAAY;UAChCU,IAAI,EAAEjB,SAAS,CAACmB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACjB,KAAK,CAAC;UACzCK,eAAe,EAAEJ,YAAY,CAACI,eAAe;UAC7CC,WAAW,EAAEL,YAAY,CAACK,WAAW;UACrCa,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACAhB,QAAQ,CAACC,OAAO,CAACG,KAAK,GAAGE,aAAa;IAEtC,OAAO,MAAM;MACX;MACA,IAAIA,aAAa,EAAE;QACnBA,aAAa,CAACD,OAAO,CAAC,CAAC;MACvB;IACF,CAAC;EACH,CAAC,EAAE,CAACf,SAAS,EAAEI,YAAY,CAAC,CAAC;EAE7B,oBAAOP,OAAA;IAAQ8B,GAAG,EAAEjB;EAAS;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAAChC,EAAA,CA5DID,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AA8DrB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}