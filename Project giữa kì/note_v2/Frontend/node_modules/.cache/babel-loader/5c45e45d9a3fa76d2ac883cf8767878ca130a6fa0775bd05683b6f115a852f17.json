{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Agent\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Agent.css\";\nimport SendButton from '../Control/SendButton/SendButton';\nimport Chat from './Chat/Chat';\n\n// Export handleSubmit function\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const handleSubmit = async (event, prompt, setMessages) => {\n  event.preventDefault();\n\n  // Add user message to messages state\n  setMessages([...messages, {\n    role: 'user',\n    content: prompt\n  }]);\n\n  // Clear input field\n  setPrompt('');\n  const outputFormat = \"output để dạng JSON\";\n  try {\n    const response = await fetch('http://localhost:3001/api/generate/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `prompt=${outputFormat}${prompt}`\n    });\n    const data = await response.json();\n    setMessages([...messages, {\n      role: 'assistant',\n      content: data.response\n    }]);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\nconst Agent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [prompt, setPrompt] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"chat-area\",\n          children: /*#__PURE__*/_jsxDEV(SendButton, {\n            handleClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Agent, \"RkG5my4RtZewsY6NLb+eKvE7sR8=\");\n_c = Agent;\nexport default Agent;\n{/* <input\r\n          type=\"text\"\r\n          name=\"prompt\"\r\n          placeholder=\"Enter your prompt\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n        /> */}\n{/* <button type=\"submit\">Send</button> */}\n\n// return (\n//   <>\n//   <h1>Chatbot</h1>\n// <div id=\"message-container\">\n//   {messages.map((message, index) => (\n//     <div key={index} className={`message ${message.role}`}>\n//       {message.content}\n//     </div>\n//   ))}\n// </div>\n// <form onSubmit={handleSubmit} className='chat-area'>\n//   <input\n//     type=\"text\"\n//     name=\"prompt\"\n//     placeholder=\"Enter your prompt\"\n//     value={prompt}\n//     onChange={(e) => setPrompt(e.target.value)}\n//   />\n//   <button type=\"submit\">Send</button>\n// </form>\n// </>\n// );\n// reder ở đầu\nvar _c;\n$RefreshReg$(_c, \"Agent\");","map":{"version":3,"names":["React","useState","SendButton","Chat","jsxDEV","_jsxDEV","Fragment","_Fragment","handleSubmit","event","prompt","setMessages","preventDefault","messages","role","content","setPrompt","outputFormat","response","fetch","method","headers","body","data","json","error","console","Agent","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","handleClick","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Agent/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Agent.css\";\r\nimport SendButton from '../Control/SendButton/SendButton';\r\nimport Chat from './Chat/Chat';\r\n\r\n// Export handleSubmit function\r\nexport const handleSubmit = async (event, prompt, setMessages) => {\r\n    event.preventDefault();\r\n\r\n    // Add user message to messages state\r\n    setMessages([...messages, { role: 'user', content: prompt }]);\r\n\r\n    // Clear input field\r\n    setPrompt('');\r\n    const outputFormat = \"output để dạng JSON\";\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/generate/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: `prompt=${outputFormat}${prompt}`,\r\n      });\r\n      const data = await response.json();\r\n\r\n      setMessages([...messages, { role: 'assistant', content: data.response }]);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\nconst Agent = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [prompt, setPrompt] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n\r\n        <h1>Chatbot</h1>\r\n        {/* <div id=\"message-container\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`message ${message.role}`}>\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n        <Chat messages={messages} />\r\n        <div>\r\n          <form onSubmit={handleSubmit} className='chat-area'>\r\n            <SendButton handleClick={handleSubmit} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Agent;\r\n\r\n\r\n\r\n\r\n{/* <input\r\n          type=\"text\"\r\n          name=\"prompt\"\r\n          placeholder=\"Enter your prompt\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n        /> */}\r\n{/* <button type=\"submit\">Send</button> */ }\r\n\r\n// return (\r\n//   <>\r\n//   <h1>Chatbot</h1>\r\n// <div id=\"message-container\">\r\n//   {messages.map((message, index) => (\r\n//     <div key={index} className={`message ${message.role}`}>\r\n//       {message.content}\r\n//     </div>\r\n//   ))}\r\n// </div>\r\n// <form onSubmit={handleSubmit} className='chat-area'>\r\n//   <input\r\n//     type=\"text\"\r\n//     name=\"prompt\"\r\n//     placeholder=\"Enter your prompt\"\r\n//     value={prompt}\r\n//     onChange={(e) => setPrompt(e.target.value)}\r\n//   />\r\n//   <button type=\"submit\">Send</button>\r\n// </form>\r\n// </>\r\n// );\r\n// reder ở đầu\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,IAAI,MAAM,aAAa;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,EAAEC,WAAW,KAAK;EAC9DF,KAAK,CAACG,cAAc,CAAC,CAAC;;EAEtB;EACAD,WAAW,CAAC,CAAC,GAAGE,QAAQ,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAEL;EAAO,CAAC,CAAC,CAAC;;EAE7D;EACAM,SAAS,CAAC,EAAE,CAAC;EACb,MAAMC,YAAY,GAAG,qBAAqB;EAE1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE,UAAUL,YAAY,GAAGP,MAAM;IACvC,CAAC,CAAC;IACF,MAAMa,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAElCb,WAAW,CAAC,CAAC,GAAGE,QAAQ,EAAE;MAAEC,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEQ,IAAI,CAACL;IAAS,CAAC,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;AAEH,MAAME,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACf,QAAQ,EAAEF,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEM,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,oBACEI,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAAwB,QAAA,gBAEExB,OAAA;QAAAwB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAQhB5B,OAAA,CAACF,IAAI;QAACU,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5B5B,OAAA;QAAAwB,QAAA,eACExB,OAAA;UAAM6B,QAAQ,EAAE1B,YAAa;UAAC2B,SAAS,EAAC,WAAW;UAAAN,QAAA,eACjDxB,OAAA,CAACH,UAAU;YAACkC,WAAW,EAAE5B;UAAa;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAEN,CAAC;AAEP,CAAC;AAAAL,EAAA,CA1BKD,KAAK;AAAAU,EAAA,GAALV,KAAK;AA4BX,eAAeA,KAAK;AAKpB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,aANC;AAOD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}