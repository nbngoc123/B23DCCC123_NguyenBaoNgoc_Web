{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Agent\\\\Chat\\\\Chat.js\";\n// Message.js\nimport React from 'react';\nimport './Chat.css'; // Import CSS file\nimport { FaCode } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  messages\n}) => {\n  // Receive messages from props\n  let isCodeBlock = false;\n  return (\n    /*#__PURE__*/\n    //     <div id=\"message-container\">\n    //   {messages.map((message, index) => (\n    //     <div key={index} className={`message ${message.role}`}>\n    //       {message.content.split('\\n').map((line, i) => (\n    //         <p key={i} className='message-content'>{line}</p>\n    //       ))}\n    //     </div>\n    //   ))}\n    // </div>\n    // <div id=\"message-container\">\n    //   {messages.map((message, index) => (\n    //     <div key={index} className={`message ${message.role}`}>\n    //       {message.content.split('\\n').map((line, i) => {\n    //         // Kiểm tra nếu line là header bằng cách dùng ký tự #\n    //         if (line.startsWith('# ')) {\n    //           return <h1 key={i} className='message-header'>{line.slice(2)}</h1>;\n    //         } else if (line.startsWith('## ')) {\n    //           return <h2 key={i} className='message-header'>{line.slice(3)}</h2>;\n    //         } else if (line.startsWith('### ')) {\n    //           return <h3 key={i} className='message-header'>{line.slice(4)}</h3>;\n    //         } else {\n    //           return <p key={i} className='message-content'>{line}</p>;\n    //         }\n    //       })}\n    //     </div>\n    //   ))}\n    // </div>\n    _jsxDEV(\"div\", {\n      id: \"message-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: message.content.split('\\n').map((line, i) => {\n          // Kiểm tra header\n          if (line.startsWith('# ')) {\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"message-header\",\n              children: line.slice(2)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 18\n            }, this);\n          } else if (line.startsWith('## ')) {\n            return /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"message-header\",\n              children: line.slice(3)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 18\n            }, this);\n          } else if (line.startsWith('### ')) {\n            return /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"message-header\",\n              children: line.slice(4)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 18\n            }, this);\n          }\n          // Kiểm tra code block\n          else if (line.startsWith('```')) {\n            // Thay đổi trạng thái isCodeBlock để bắt đầu/kết thúc code block\n            isCodeBlock = !isCodeBlock;\n            return null; // không cần render dòng ``` này\n          } else if (isCodeBlock) {\n            return /*#__PURE__*/_jsxDEV(FaCode, {\n              className: \"message-code\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 18\n            }, this);\n          }\n          // Nội dung thông thường\n          else {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-content\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 18\n            }, this);\n          }\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","FaCode","jsxDEV","_jsxDEV","Chat","messages","isCodeBlock","id","children","map","message","index","className","role","content","split","line","i","startsWith","slice","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Agent/Chat/Chat.js"],"sourcesContent":["// Message.js\r\nimport React from 'react';\r\nimport './Chat.css' // Import CSS file\r\nimport { FaCode } from 'react-icons/fa';\r\n\r\nconst Chat = ({ messages }) => { // Receive messages from props\r\nlet isCodeBlock = false;\r\n  return (\r\n    //     <div id=\"message-container\">\r\n    //   {messages.map((message, index) => (\r\n    //     <div key={index} className={`message ${message.role}`}>\r\n    //       {message.content.split('\\n').map((line, i) => (\r\n    //         <p key={i} className='message-content'>{line}</p>\r\n    //       ))}\r\n    //     </div>\r\n    //   ))}\r\n    // </div>\r\n\r\n    // <div id=\"message-container\">\r\n    //   {messages.map((message, index) => (\r\n    //     <div key={index} className={`message ${message.role}`}>\r\n    //       {message.content.split('\\n').map((line, i) => {\r\n    //         // Kiểm tra nếu line là header bằng cách dùng ký tự #\r\n    //         if (line.startsWith('# ')) {\r\n    //           return <h1 key={i} className='message-header'>{line.slice(2)}</h1>;\r\n    //         } else if (line.startsWith('## ')) {\r\n    //           return <h2 key={i} className='message-header'>{line.slice(3)}</h2>;\r\n    //         } else if (line.startsWith('### ')) {\r\n    //           return <h3 key={i} className='message-header'>{line.slice(4)}</h3>;\r\n    //         } else {\r\n    //           return <p key={i} className='message-content'>{line}</p>;\r\n    //         }\r\n    //       })}\r\n    //     </div>\r\n    //   ))}\r\n    // </div>\r\n\r\n    <div id=\"message-container\">\r\n  {messages.map((message, index) => (\r\n    <div key={index} className={`message ${message.role}`}>\r\n      {message.content.split('\\n').map((line, i) => {\r\n        // Kiểm tra header\r\n        if (line.startsWith('# ')) {\r\n          return <h1 key={i} className='message-header'>{line.slice(2)}</h1>;\r\n        } else if (line.startsWith('## ')) {\r\n          return <h2 key={i} className='message-header'>{line.slice(3)}</h2>;\r\n        } else if (line.startsWith('### ')) {\r\n          return <h3 key={i} className='message-header'>{line.slice(4)}</h3>;\r\n        }\r\n        // Kiểm tra code block\r\n        else if (line.startsWith('```')) {\r\n          // Thay đổi trạng thái isCodeBlock để bắt đầu/kết thúc code block\r\n          isCodeBlock = !isCodeBlock;\r\n          return null; // không cần render dòng ``` này\r\n        } else if (isCodeBlock) {\r\n          return <FaCode key={i} className='message-code'>{line}</FaCode>;\r\n        }\r\n        // Nội dung thông thường\r\n        else {\r\n          return <p key={i} className='message-content'>{line}</p>;\r\n        }\r\n      })}\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default Chat;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY,EAAC;AACpB,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAE;EACjC,IAAIC,WAAW,GAAG,KAAK;EACrB;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAH,OAAA;MAAKI,EAAE,EAAC,mBAAmB;MAAAC,QAAA,EAC5BH,QAAQ,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BR,OAAA;QAAiBS,SAAS,EAAE,WAAWF,OAAO,CAACG,IAAI,EAAG;QAAAL,QAAA,EACnDE,OAAO,CAACI,OAAO,CAACC,KAAK,CAAC,IAAI,CAAC,CAACN,GAAG,CAAC,CAACO,IAAI,EAAEC,CAAC,KAAK;UAC5C;UACA,IAAID,IAAI,CAACE,UAAU,CAAC,IAAI,CAAC,EAAE;YACzB,oBAAOf,OAAA;cAAYS,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,EAAEQ,IAAI,CAACG,KAAK,CAAC,CAAC;YAAC,GAA5CF,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC;UACpE,CAAC,MAAM,IAAIP,IAAI,CAACE,UAAU,CAAC,KAAK,CAAC,EAAE;YACjC,oBAAOf,OAAA;cAAYS,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,EAAEQ,IAAI,CAACG,KAAK,CAAC,CAAC;YAAC,GAA5CF,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC;UACpE,CAAC,MAAM,IAAIP,IAAI,CAACE,UAAU,CAAC,MAAM,CAAC,EAAE;YAClC,oBAAOf,OAAA;cAAYS,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,EAAEQ,IAAI,CAACG,KAAK,CAAC,CAAC;YAAC,GAA5CF,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgD,CAAC;UACpE;UACA;UAAA,KACK,IAAIP,IAAI,CAACE,UAAU,CAAC,KAAK,CAAC,EAAE;YAC/B;YACAZ,WAAW,GAAG,CAACA,WAAW;YAC1B,OAAO,IAAI,CAAC,CAAC;UACf,CAAC,MAAM,IAAIA,WAAW,EAAE;YACtB,oBAAOH,OAAA,CAACF,MAAM;cAASW,SAAS,EAAC,cAAc;cAAAJ,QAAA,EAAEQ;YAAI,GAAjCC,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAyC,CAAC;UACjE;UACA;UAAA,KACK;YACH,oBAAOpB,OAAA;cAAWS,SAAS,EAAC,iBAAiB;cAAAJ,QAAA,EAAEQ;YAAI,GAApCC,CAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuC,CAAC;UAC1D;QACF,CAAC;MAAC,GAtBMZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAGN,CAAC;AAACC,EAAA,GA9DIpB,IAAI;AAiEV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}