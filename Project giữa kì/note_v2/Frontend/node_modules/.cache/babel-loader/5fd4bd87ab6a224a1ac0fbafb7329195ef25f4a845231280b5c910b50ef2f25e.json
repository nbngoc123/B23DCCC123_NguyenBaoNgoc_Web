{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Note\\\\Graph\\\\chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = () => {\n  _s();\n  const [chartData, setChartData] = useState([{\n    label: 'Tháng 1',\n    value: 10\n  }, {\n    label: 'Tháng 2',\n    value: 20\n  }, {\n    label: 'Tháng 3',\n    value: 15\n  }]);\n  const [chartOptions, setChartOptions] = useState({\n    type: 'bar',\n    datasetLabel: 'Doanh thu',\n    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n    borderColor: 'rgba(255, 99, 132, 1)'\n  });\n  useEffect(() => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const chart = new Chart(ctx, {\n      type: chartOptions.type,\n      data: {\n        labels: chartData.map(d => d.label),\n        datasets: [{\n          label: chartOptions.datasetLabel,\n          data: chartData.map(d => d.value),\n          backgroundColor: chartOptions.backgroundColor,\n          borderColor: chartOptions.borderColor,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n\n    // Cleanup function to destroy the chart instance when the component unmounts\n    return () => {\n      chart.destroy();\n    };\n  }, [chartData, chartOptions]); // Rerender chart when data or options change\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"myChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartComponent, \"zXz1IBK+IZ6N0SXyZG2ZyC6kceM=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","ChartComponent","_s","chartData","setChartData","label","value","chartOptions","setChartOptions","type","datasetLabel","backgroundColor","borderColor","ctx","document","getElementById","getContext","chart","data","labels","map","d","datasets","borderWidth","options","responsive","scales","y","beginAtZero","destroy","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Note/Graph/chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nconst ChartComponent = () => {\r\n  const [chartData, setChartData] = useState([\r\n  { label: 'Tháng 1', value: 10 },\r\n  { label: 'Tháng 2', value: 20 },\r\n  { label: 'Tháng 3', value: 15 }\r\n  ]);\r\n\r\n  const [chartOptions, setChartOptions] = useState({\r\n  type: 'bar',\r\n  datasetLabel: 'Doanh thu',\r\n  backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n  borderColor: 'rgba(255, 99, 132, 1)'\r\n});\r\n\r\n  useEffect(() => {\r\n    const ctx = document.getElementById('myChart').getContext('2d');\r\n    const chart = new Chart(ctx, {\r\n      type: chartOptions.type,\r\n      data: {\r\n        labels: chartData.map(d => d.label),\r\n        datasets: [{\r\n          label: chartOptions.datasetLabel,\r\n          data: chartData.map(d => d.value),\r\n          backgroundColor: chartOptions.backgroundColor,\r\n          borderColor: chartOptions.borderColor,\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Cleanup function to destroy the chart instance when the component unmounts\r\n    return () => {\r\n      chart.destroy();\r\n    };\r\n  }, [chartData, chartOptions]); // Rerender chart when data or options change\r\n\r\n  return (\r\n    <canvas id=\"myChart\"></canvas>\r\n  );\r\n};\r\n\r\nexport default ChartComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAC3C;IAAES,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/B;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAG,CAAC,CAC9B,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IACjDa,IAAI,EAAE,KAAK;IACXC,YAAY,EAAE,WAAW;IACzBC,eAAe,EAAE,yBAAyB;IAC1CC,WAAW,EAAE;EACf,CAAC,CAAC;EAEAf,SAAS,CAAC,MAAM;IACd,MAAMgB,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IAC/D,MAAMC,KAAK,GAAG,IAAInB,KAAK,CAACe,GAAG,EAAE;MAC3BJ,IAAI,EAAEF,YAAY,CAACE,IAAI;MACvBS,IAAI,EAAE;QACJC,MAAM,EAAEhB,SAAS,CAACiB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAChB,KAAK,CAAC;QACnCiB,QAAQ,EAAE,CAAC;UACTjB,KAAK,EAAEE,YAAY,CAACG,YAAY;UAChCQ,IAAI,EAAEf,SAAS,CAACiB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACf,KAAK,CAAC;UACjCK,eAAe,EAAEJ,YAAY,CAACI,eAAe;UAC7CC,WAAW,EAAEL,YAAY,CAACK,WAAW;UACrCW,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXX,KAAK,CAACY,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,CAAC1B,SAAS,EAAEI,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE/B,oBACEP,OAAA;IAAQ8B,EAAE,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAElC,CAAC;AAAChC,EAAA,CA/CID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}