{"ast":null,"code":"import React, { useState } from 'react';\nconst [prompt, setPrompt] = useState('');\nexport const [messages, setMessages] = useState([]);\nconsole.log(prompt);\nexport const handleSubmit = async event => {\n  event.preventDefault();\n\n  // Add user message to messages state\n  setMessages([...messages, {\n    role: 'user',\n    content: prompt\n  }]);\n\n  // Clear input field\n  setPrompt('');\n  const outputFormat = \"output để dạng JSON\";\n  try {\n    const response = await fetch('http://localhost:3001/api/generate/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `prompt=${outputFormat}${prompt}`\n    });\n    const data = await response.json();\n    setMessages([...messages, {\n      role: 'assistant',\n      content: data.response\n    }]);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};","map":{"version":3,"names":["React","useState","prompt","setPrompt","messages","setMessages","console","log","handleSubmit","event","preventDefault","role","content","outputFormat","response","fetch","method","headers","body","data","json","error"],"sources":["D:/Document/test/project-note/src/components/Agent/MesHandleSubmit/handleSubmit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nconst [prompt, setPrompt] = useState('');\r\nexport const [messages, setMessages] = useState([]);\r\nconsole.log(prompt)\r\nexport const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Add user message to messages state\r\n    setMessages([...messages, { role: 'user', content: prompt }]);\r\n\r\n    // Clear input field\r\n    setPrompt('');\r\n    const outputFormat = \"output để dạng JSON\";\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:3001/api/generate/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: `prompt=${outputFormat}${prompt}`,\r\n        });\r\n        const data = await response.json();\r\n\r\n        setMessages([...messages, { role: 'assistant', content: data.response }]);\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AACxC,OAAO,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;AACnDK,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;AACnB,OAAO,MAAMM,YAAY,GAAG,MAAOC,KAAK,IAAK;EACzCA,KAAK,CAACC,cAAc,CAAC,CAAC;;EAEtB;EACAL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;IAAEO,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAEV;EAAO,CAAC,CAAC,CAAC;;EAE7D;EACAC,SAAS,CAAC,EAAE,CAAC;EACb,MAAMU,YAAY,GAAG,qBAAqB;EAE1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAE,UAAUL,YAAY,GAAGX,MAAM;IACzC,CAAC,CAAC;IACF,MAAMiB,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAElCf,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEO,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEO,IAAI,CAACL;IAAS,CAAC,CAAC,CAAC;EAC7E,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZf,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAChD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}