{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Note\\\\Task\\\\index.js\",\n  _s = $RefreshSig$();\n// import { data } from \"../Data/TodoListData\"\nimport React, { useState } from 'react';\nimport \"./Task.css\";\nimport AddTodoItem from '../AddTodoItem';\nimport AddTask from '../../Control/AddTask';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Task() {\n  _s();\n  const data = [];\n  const [todoList, setTodoList] = useState(data);\n  console.log(todoList);\n  const handleAddItem = async newItem => {\n    console.log(newItem);\n    const response = await fetch('http://localhost:3001/api/generate/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      // body: `prompt=${\"output để dạng JSON\"}${newItem}`,\n      body: `prompt=${\"output để dạng JSON\"}${JSON.stringify(newItem)}` // Sử dụng JSON.stringify vif lúc train model data mình để dạng string nên newItem ỏ đây model không hiểu\n    });\n    const data = await response.json();\n    console.log(data);\n    setTodoList([...todoList, {\n      ...newItem,\n      id: todoList.length + 1\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-container\",\n      children: /*#__PURE__*/_jsxDEV(AddTask, {\n        handleItem: handleAddItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), todoList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '154%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"task-title\",\n            children: [\" Title: \", task.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"task-description\",\n            children: [\"Description: \", task.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-process\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-status completed\",\n              children: [\" \", task.status ? \"Completed\" : \"In Progress\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-due\",\n          children: [\"Due:\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"task-due-date\",\n            style: {\n              fontSize: '1rem',\n              fontWeight: '500'\n            },\n            children: new Date(task.datetime).toLocaleDateString('en-US', {\n              day: 'numeric',\n              month: 'short',\n              year: 'numeric',\n              hour: 'numeric',\n              minute: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task-duration\",\n          children: [\"Th\\u1EDDi gian \\u0111\\xE3 th\\u1EF1c hi\\u1EC7n: \", task.actual_duration, \"h \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"task-detail\",\n          children: \"Detail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n_s(Task, \"hQPboUTzy/n3VwpgOMUg4ZNqXyY=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","AddTodoItem","AddTask","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","_s","data","todoList","setTodoList","console","log","handleAddItem","newItem","response","fetch","method","headers","body","JSON","stringify","json","id","length","children","className","handleItem","fileName","_jsxFileName","lineNumber","columnNumber","map","task","style","width","title","content","status","fontSize","fontWeight","Date","datetime","toLocaleDateString","day","month","year","hour","minute","actual_duration","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Note/Task/index.js"],"sourcesContent":["// import { data } from \"../Data/TodoListData\"\r\nimport React, { useState } from 'react';\r\nimport \"./Task.css\";\r\nimport AddTodoItem from '../AddTodoItem';\r\nimport AddTask from '../../Control/AddTask';\r\n\r\nfunction Task() {\r\n    const data = []\r\n    const [todoList, setTodoList] = useState(data);\r\n    console.log(todoList)\r\n    const handleAddItem = async (newItem) => {\r\n        console.log(newItem)\r\n\r\n        const response = await fetch('http://localhost:3001/api/generate/', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            // body: `prompt=${\"output để dạng JSON\"}${newItem}`,\r\n            body: `prompt=${\"output để dạng JSON\"}${JSON.stringify(newItem)}`, // Sử dụng JSON.stringify vif lúc train model data mình để dạng string nên newItem ỏ đây model không hiểu\r\n\r\n          });\r\n          const data = await response.json();\r\n          console.log(data)\r\n\r\n          setTodoList([...todoList, { ...newItem, id: todoList.length + 1 }]);\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"note-container\">\r\n                {/* <AddTodoItem onAddItem={handleAddItem} />  */}\r\n                <AddTask handleItem={handleAddItem} />\r\n            </div>\r\n            {todoList.map(task => (\r\n                <div key={task.id} className=\"task-item\">\r\n                    <div className=\"task-content\">\r\n                        <div style={{ width: '154%' }}>\r\n                            <h2 className=\"task-title\"> Title: {task.title}</h2>\r\n                            <p className=\"task-description\">Description: {task.content}</p>\r\n                        </div>\r\n\r\n                        <div className=\"task-process\">\r\n                            <span>\r\n                                <p className=\"task-status completed\"> {task.status ? \"Completed\" : \"In Progress\"} </p>:\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"task-time\">\r\n                        <div className=\"task-due\">Due:\r\n                           <p className=\"task-due-date\" style={{ fontSize: '1rem', fontWeight: '500' }}>{new Date(task.datetime).toLocaleDateString('en-US', {\r\n                                day: 'numeric',\r\n                                month: 'short',\r\n                                year: 'numeric',\r\n                                hour: 'numeric',\r\n                                minute: 'numeric',\r\n                            })}</p>\r\n                        </div>\r\n                        <p className=\"task-duration\">Thời gian đã thực hiện: {task.actual_duration}h </p>\r\n\r\n                        <button className=\"task-detail\">Detail</button>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\nexport default Task;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}