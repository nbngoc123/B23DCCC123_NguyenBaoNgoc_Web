{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\test\\\\project-note\\\\src\\\\components\\\\Control\\\\AddTask\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddTask() {\n  _s();\n  const [addTask, setAddTask] = useState(false);\n  const handleAddTask = () => setAddTask(!addTask);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(AddTask, \"SEUGLlXISuXJukG6cluO0rD1QFE=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTask","_s","addTask","setAddTask","handleAddTask","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Document/test/project-note/src/components/Control/AddTask/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction AddTask() {\r\n\r\n    const [addTask, setAddTask] = useState(false);\r\n    const handleAddTask = () => setAddTask(!addTask)\r\n\r\n    return (\r\n        <>\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTask;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMU,aAAa,GAAGA,CAAA,KAAMD,UAAU,CAAC,CAACD,OAAO,CAAC;EAEhD,oBACIL,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACAR,OAAA;MAAQS,OAAO,EAAEF,aAAc;MAAAC,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBAC/C,CAAC;AAEX;AAACT,EAAA,CAVQD,OAAO;AAAAW,EAAA,GAAPX,OAAO;AAYhB,eAAeA,OAAO;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}